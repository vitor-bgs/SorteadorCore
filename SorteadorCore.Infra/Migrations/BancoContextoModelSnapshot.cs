// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SorteadorCore.Infra.Context;

namespace SorteadorCore.Infra.Migrations
{
    [DbContext(typeof(BancoContexto))]
    partial class BancoContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SorteadorCore.Domain.Entities.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("ParticipanteId");

                    b.ToTable("Participante");
                });

            modelBuilder.Entity("SorteadorCore.Domain.Entities.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasMaxLength(150);

                    b.Property<int>("QuantidadeVencedoresMaioresPontos");

                    b.Property<int>("QuantidadeVencedoresMenoresPontos");

                    b.HasKey("SalaId");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("SorteadorCore.Domain.Entities.Sorteio", b =>
                {
                    b.Property<int>("SorteioId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataEncerramento");

                    b.Property<DateTime>("DataInicio");

                    b.Property<int>("SalaId");

                    b.HasKey("SorteioId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sorteio");
                });

            modelBuilder.Entity("SorteadorCore.Domain.Entities.SorteioDetalhe", b =>
                {
                    b.Property<int>("SorteioDetalheId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataParticipacao");

                    b.Property<string>("EnderecoIP")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasMaxLength(150);

                    b.Property<bool>("ParticipacaoValida");

                    b.Property<int>("ParticipanteId");

                    b.Property<int>("Pontos");

                    b.Property<int>("SorteioId");

                    b.HasKey("SorteioDetalheId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("SorteioId");

                    b.ToTable("SorteioDetalhe");
                });

            modelBuilder.Entity("SorteadorCore.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasMaxLength(300);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasMaxLength(150);

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SorteadorCore.Domain.Entities.Sorteio", b =>
                {
                    b.HasOne("SorteadorCore.Domain.Entities.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SorteadorCore.Domain.Entities.SorteioDetalhe", b =>
                {
                    b.HasOne("SorteadorCore.Domain.Entities.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SorteadorCore.Domain.Entities.Sorteio", "Sorteio")
                        .WithMany("Participacoes")
                        .HasForeignKey("SorteioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
